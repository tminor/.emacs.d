
* Layout

Use bullets instead of Org's standard stars. Found [[http://cestlaz.github.io/posts/using-emacs-2-org/#.Wb1EQY4pCfU][here]].

#+BEGIN_SRC emacs-lisp
(use-package org-bullets
  :ensure t
  :config
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
#+END_SRC

I like indentation by default. I find it easier to read.

#+BEGIN_SRC emacs-lisp
(setq org-startup-indented t)
#+END_SRC

* Key Bindings

I found the following key bindings in the condensed Org manual.

#+BEGIN_SRC emacs-lisp
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-cb" 'org-iswitchb)
#+END_SRC

* =org-capture=

Specify the primary capture file (I only use one).

#+BEGIN_SRC emacs-lisp
(setq org-default-notes-file (concat org-directory "/capture.org"))
#+END_SRC

** Capture Templates

Define capture templates here. I found [[https://orgmode.org/manual/Capture-templates.html][the manual]] to be pretty helpful here.

#+BEGIN_SRC emacs-lisp
(setq org-capture-templates
      (quote (("t" "todo" entry (file (concat org-directory "/capture.org"))
               "* TODO %?\n%U\n%a\n" :clock-in t :clock-resume t)
              ("n" "note" entry (file (concat org-directory "/capture.org"))
               "* %? :NOTE:\n%U\n%a\n" :clock-in t :clock-resume t)
              ("j" "Journal" entry (file+datetree (concat org-directory "/capture.org"))
               "* %?\n%U\n" :clock-in t :clock-resume t)
              )))
#+END_SRC

* =org-agenda=

I found a great =org-mode= configuration file [[https://github.com/kapilreddy/dotemacs/blob/master/configurations/org-mode-config.el][here]]; it defines a
custom variable (=org-base-directory=) that we can change to whatever
we want. We then use =org-agenda-files= to select a =list= of directories
that contain our main =org= files.

#+BEGIN_SRC emacs-lisp
(setq org-base-directory "~/org/")

(setq org-agenda-files (list (concat org-base-directory "work")
			     (concat org-base-directory "personal")))
#+END_SRC

* =org-refile=

For =org-refile=, we want our refile targets to be our main =org= files.
We also enable some nice quality of life settings. Read more [[https://blog.aaronbieber.com/2017/03/19/organizing-notes-with-refile.html][here]].

#+BEGIN_SRC emacs-lisp
(setq org-refile-targets
      '((nil :maxlevel . 9)
	(org-agenda-files :maxlevel . 9)))

(setq org-outline-path-complete-in-steps nil)

(setq org-refile-use-outline-path t)
#+END_SRC
